#!/usr/bin/env bash

# Initialise
BASE="$(realpath "$(dirname "$0")")"
TEMPLATES="$BASE/templates"
AVAILABLE=( $(ls $BASE/schemes) )
CACHE="$HOME/.cache/colors"
DIFF=$(date '+%s')

source "$BASE/include/errors.lib.sh"
source "$BASE/include/colors.lib.sh"
source "$BASE/include/manage.core.sh"

mkdir  -p "$CACHE" > /dev/null 2>&1
[[ -e "$BASE/config" ]] && source "$BASE/config"


# Restore current color scheme
CURRENT="$CACHE/theme.$(hostname)"

echo -e "declare -A COLOR\nexport COLOR=(" > $CURRENT
for i in ${COLOR_KEYS[@]}; do
    [[ $(int $i) ]] && \
        cl=$(xrdbq "color$i") || cl=$(xrdbq "*.$i")

    [[ ${cl} ]] && echo -e "\t[$i]=\"$cl\"" >> $CURRENT
done
echo -e ")" >> $CURRENT


# Reload main config
[[ -e "$BASE/config" ]] && source "$BASE/config"

# Parse command-line args
source "$BASE/include/manage.args.sh"


# Select prefered brightnest variant
LIGHT=true
BRIGHT_VARIANT=""
if [[ ${GTK_APPLICATION_PREFER_DARK_THEME:-1} == 1 ]]; then
    LIGHT=false
    BRIGHT_VARIANT="-dark"
fi

# Create scheme from image file
if [[ ${IMAGE} ]]; then
    [[ ! -e "${IMAGE/\~/$HOME}" ]] && \
        fatal "Image file '${IMAGE/\~/$HOME}' not existing"

    new_theme=$(mktemp -u "$CACHE/theme.XXXXXXXXX")
    $BASE/bin/wal.py "${IMAGE/\~/$HOME}" ${LIGHT} "$new_theme" || \
        fatal "Error of generating color theme"

    NAME="$new_theme"
fi

# Resolve colors theme name
NAME=${NAME:-${CURRENT}}

if [[ ! -f "${NAME/\~/$HOME}" ]]; then
	NAME="$BASE/schemes/$NAME"

	[[ ! -f "${NAME}" ]] && \
		fatal "Color scheme '$NAME' not existing!"
fi


# Load color theme
unset      COLOR
declare -A COLOR
source  "${NAME/\~/$HOME}"
rgb_normalize --normalise-clear-colors

ORIGIN_BLACK=${COLOR[0]}

# Preview without modifiers
[[ ${CLEAN_THEME_PREVIEW} ]] && preview_theme

# Set saturation
if [[ ${SATURATION} ]]; then
    for i in {0..15}; do
        COLOR[$i]=$(saturation "${COLOR[$i]}" $SATURATION)
    done
fi

# Set specials colors
fill_special_colors --fill-missing-items 

# Load main config (theme config parameters is replaced by this)
if [[ ${CONFIG} ]]; then
    [[ ! -e ${CONFIG/\~/$HOME} ]] && \
        fatal "Configuration '${CONFIG/\~/$HOME}' not existing"

    source "${CONFIG/\~/$HOME}"
else
    [[ -e "$BASE/config" ]] && source "$BASE/config"
fi

# Replace defined font and check it
[[ ${_GTK_FONT_NAME} ]] && \
    GTK_FONT_NAME="${_GTK_FONT_NAME}"

# Set color 0 from background color
[[ ${_BLACK_VALUE} ]] && \
    BLACK_VALUE="${_BLACK_VALUE}"

if [[ ${BLACK_VALUE} ]]; then
    COLOR[background]=${ORIGIN_BLACK:-#010101}
    COLOR[0]=$(saturation "${COLOR[background]}" $BLACK_VALUE)
fi

# Replace defined colors
for i in ${!_colors[@]}; do
    COLOR[$i]=${_colors[$i]}
done

# Set brightnest
for i in {1..7}; do
    j=$(echo "$i + 8" | bc -s)
    [[ ${COLOR[$i]} == ${COLOR[$j]} || ${RELATIVE_SATURATION} ]] && \
        COLOR[$j]=$(saturation "${COLOR[$i]}" ${BRIGHTNEST:-10})
done

# Default gtk-theme
GTK_THEME_NAME="FlatColor"
# Default icon-theme with colors modified variant
GTK_ICON_THEME_NAME="Tela-${COLOR[cursor]:-default}${BRIGHT_VARIANT}"

# Preview with all modifiers
rgb_normalize --normalise-modified-colors
[[ ! ${CLEAN_THEME_PREVIEW} ]] && preview_theme


#
# Install theme files
#

# Set background image
if [[ ${SET_WALLPAPER} ]]; then
    [[ ! ${IMAGE} ]] && \
        error "Please specify the image first with --image" && exit 1

    $BASE/bin/setwal "$IMAGE" --fade-top ${SET_WALLPAPER:-80} \
        $([[ ! ${BRIGHT_VARIANT} ]] && echo "--light")
fi


[[ ! ${INSTALL} ]] && exit 0

echo -e "-- Install theme '${NAME/$HOME/\~}'\n"

# Install XRDB colors
normal "[ ] Install xrdb colors"
install_xrdb_colors && \
    success "[+] Xrdb colors installed" || \
    error   "[-] Xrdb colors not installed"


# Install TERMINALS colors
normal "[ ] Install terminals colors"
install_terminals_colors && \
    success "[+] Terminals colors installed" || \
    error   "[-] Terminals colors not installed"


# Install ROFI colors
normal "[ ] Install rofi colors"
apply "$TEMPLATES/rofi.rasi" "$CACHE/colors.rasi" && \
    success "[+] Rofi colors installed" || \
    error   "[-] Rofi colors not installed"


# Install GTK colors
normal "[ ] Install gtk 2.0 colors"
install_gtk2_colors && \
    success "[+] Gtk 2.0 colors installed" || \
    error   "[-] Gtk 2.0 colors not installed"


normal "[ ] Install gtk 3.0 colors"
install_gtk3_colors && \
    success "[+] Gtk 3.0 colors installed" || \
    error   "[-] Gtk 3.0 colors not installed"


normal "[ ] Install gtk 4.0 colors"
install_gtk4_colors && \
    success "[+] Gtk 4.0 colors installed" || \
    error   "[-] Gtk 4.0 colors not installed"


# Install GTK theme
if [[ "${GTK_THEME_NAME}" && ! -e "$HOME/.themes/${GTK_THEME_NAME}" ]]; then
    normal "[ ] Install gtk theme '${GTK_THEME_NAME}'"
    install_gtk_theme "${GTK_THEME_NAME}" && \
        success "[+] Gtk theme '${GTK_THEME_NAME}' installed" || \
        error   "[-] Gtk theme '${GTK_THEME_NAME}' not installed"
fi


# Install Icons theme
if [[ "${GTK_ICON_THEME_NAME}" && ! -e "$HOME/.icons/${GTK_ICON_THEME_NAME:-unknown}" ]]; then
    echo -e "[ ] Install icons theme '${GTK_ICON_THEME_NAME}'"
    install_gtk_icon_theme "${GTK_ICON_THEME_NAME}" "${BRIGHT_VARIANT}" && \
        success "[+] Icons theme '${GTK_ICON_THEME_NAME}' installed"    || \
        error   "[-] Icons theme '${GTK_ICON_THEME_NAME}' not installed"
fi


# Store Shell colors
normal "[ ] Store shell colors theme"
install_shell_colors "$CACHE/colors.sh" && \
    success "[+] Shell colors theme stored to '${CACHE/$HOME/\~}/colors.sh'" || \
    fatal   "[-] Shell colors theme is not stored"


# Store telegram theme
normal "[ ] Store telegram colors theme"
$BASE/bin/telegram-palette-gen \
    --palette  "$CACHE/colors.sh" \
    --template "$TEMPLATES/colors.tpg-constants"  && \
    success "[+] Telegram colors theme is stored" || \
    error   "[-] Telegram colors theme is not stored"


# Save last config
normal "[ ] Save your configuration"
CC_CONF=$(mktemp "$CACHE/config.XXXXXXXXX")
store_configuration "$CC_CONF" && \
    success "[+] Your configuration is saved to '${CC_CONF/$HOME/\~}' file" || \
    error   "[-] Your configuration is not saved"


# Restart wm
bspc wm -r

DIFF=$((`date '+%s'` - $DIFF))
success "\nCompleted with $(displaytime $DIFF)..."
