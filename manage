#!/usr/bin/env bash

# Initialise
BASE="$(realpath "$(dirname "$0")")"
TEMPLATES="$BASE/templates"
AVAILABLE=( $(ls $BASE/schemes) )
CACHE="$HOME/.cache/colors"
DIFF=$(date '+%s')

# Hardcode set gtk-theme and icon-theme
# Default gtk-theme
GTK_THEME_NAME="FlatColor"
# Default icon-theme with colors modified variant
GTK_ICON_THEME_NAME="Tela"

[[ -e "$HOME/.wallpaper.jpg" ]] && \
    WALLPAPER="$HOME/.wallpaper.jpg"

source "$BASE/bin/rgb"
source "$BASE/inc/manage.core.sh"

mkdir  -p "$CACHE" > /dev/null 2>&1
[[ -e "$BASE/config" ]] && source "$BASE/config"


# Restore current color scheme from xrdb
for i in ${COLOR_KEYS[@]}; do
    [[ $(isint $i) ]] && \
        cl=$(xrdbq "color$i") || cl=$(xrdbq "*.$i")

    [[ ${cl} && $(isrgb "$cl") ]] && \
        COLOR[$i]="$cl"
done


# Reload main config
[[ -e "$BASE/config" ]] && source "$BASE/config"

# Parse command-line args
source "$BASE/inc/manage.args"


# Select prefered brightnest variant
LIGHT=true
BRIGHT_VARIANT=""
if [[ ${GTK_APPLICATION_PREFER_DARK_THEME:-1} == 1 ]]; then
    LIGHT=false
    BRIGHT_VARIANT="-dark"
fi


if [[ ${COLOR_BLACK_BASE} ]]; then
    unset COLOR; declare -A COLOR

    hsv=( $(rgb_to_hsv $COLOR_BLACK_BASE) )
    vstep=$(( (100 - ${hsv[2]}) / 7 ))

    COLOR[0]=$COLOR_BLACK_BASE
    COLOR[8]=$(rgb_saturation $(rgb_value $COLOR_BLACK_BASE \
        "+$(round $(echo "$vstep * 2.33" | bc -l))%") $(( ${hsv[1]} / 2 )))

    for i in {1..7}; do
        new=$(rgb_value $COLOR_BLACK_BASE "+$(( $i * $vstep))%")
        COLOR[$i]=$new
        COLOR[$(( $i + 8 ))]=$new
    done

    if [[ ${GTK_APPLICATION_PREFER_DARK_THEME:-1} != 1 ]]; then
        _color_0=$(get 0)
        COLOR[0]=$(get 7)
        COLOR[7]=$_color_0
        COLOR[15]=$_color_0
    fi

    NAME="bb-${COLOR_BLACK_BASE}"

# Create scheme from image file
elif [[ ${IMAGE} ]]; then
    [[ ! -e "${IMAGE/\~/$HOME}" ]] && \
        fatal "Image file '${IMAGE/\~/$HOME}' not existing"

    NAME=$(mktemp -u "$CACHE/theme.XXXXXXXXX")
    $BASE/bin/wal.py "${IMAGE/\~/$HOME}" ${LIGHT} "$NAME" || \
        fatal "Error of generating color theme"

    unset COLOR; declare -A COLOR
    source "${NAME/\~/$HOME}"

# Load selected colors scheme
elif [[ ${NAME} ]]; then
    if [[ ! -f "${NAME/\~/$HOME}" ]]; then
        NAME="$BASE/schemes/$NAME"

        [[ ! -f "${NAME}" ]] && \
            fatal "Color scheme '$NAME' not existing!"
    fi

    unset COLOR; declare -A COLOR
    source "${NAME/\~/$HOME}"

# Resolve colors scheme name
else
    NAME="xrdb"
fi


# Preview without modifiers
[[ ${CLEAN_THEME_PREVIEW} ]] && preview_theme


# Load main config (theme config parameters is replaced by this)
if [[ ${CONFIG} ]]; then
    [[ ! -e ${CONFIG/\~/$HOME} ]] && \
        fatal "Configuration '${CONFIG/\~/$HOME}' not existing"

    source "${CONFIG/\~/$HOME}"
    NAME="$(basename "${CONFIG/\~/$HOME}")"
else
    [[ -e "$BASE/config" ]] && source "$BASE/config"
fi


# Replace defined colors
for i in ${!_commands[@]}; do
    MOD=( ${_commands[$i]} )

    _dst="${MOD[0]}"
    _val="${MOD[1]}"
    _mod="${MOD[2]}"
    _src="${MOD[3]}"

    #echo -e "cmd: $_dst, $_val, $_mod, $_src"

    case "${_dst}" in
    --hue)
        for i in {0..15}; do
            COLOR[$i]=$(rgb_hue "$(get $i)" "$_val")
        done
        ;;

    --saturation)
        for i in {0..15}; do
            COLOR[$i]=$(rgb_saturation "$(get $i)" "$_val")
        done
        ;;

    --value)
        for i in {0..15}; do
            COLOR[$i]=$(rgb_value "$(get $i)" "$_val")
        done
        ;;

    --relative)
        for i in {1..7}; do
            j=$(( $i + 8 ))
            [[ $(get $i) == $(get $j) || ${_mod} ]] && \
                COLOR[$j]=$(rgb_value "$(get $i)" "$_val")
        done
        ;;

    --mode)
        if [[ ${_val} == 1 ]]; then
            _base=$(get 0)
            COLOR[background]="${_base}"

            if [[ ${GTK_APPLICATION_PREFER_DARK_THEME:-1} == 1 ]]; then
                COLOR[0]=$(rgb_value "${_base}" "+10%")
                COLOR[8]=$(rgb_value "${_base}" "+25%")
            else
                COLOR[0]=$(rgb_value "${_base}" "-10%")
                COLOR[8]=$(rgb_value "${_base}" "-25%")
            fi

        elif [[ ${_val} == 2 ]]; then
            _base=$(get 0)

            if [[ ${GTK_APPLICATION_PREFER_DARK_THEME:-1} == 1 ]]; then
                COLOR[background]=$(rgb_value "${_base}" "-10%")
                COLOR[8]=$(rgb_value "${_base}" "+15%")
            else
                COLOR[background]=$(rgb_value "${_base}" "+10%")
                COLOR[8]=$(rgb_value "${_base}" "-15%")
            fi

        elif [[ ${_val} ]]; then
            fatal "Invalid mode '${_val}' from auto resolve colors"
            exit 1
        fi
        ;;

    --fill)
        fill_special_colors
        ;;

    *)
        [[ ! $(isrgb "$_src") ]] && \
            _src="$(get "$_src")"

        COLOR[$_dst]="$_src"
        
        if [[ $(isparsed_value "$_val") ]]; then
            [[ "Hh" == *"$_mod"* ]] && \
                COLOR[$_dst]=$(rgb_hue "$_src" "$_val")

            [[ "Ss" == *"$_mod"* ]] && \
                COLOR[$_dst]=$(rgb_saturation "$_src" "$_val")

            [[ "Vv" == *"$_mod"* ]] && \
                COLOR[$_dst]=$(rgb_value "$_src" "$_val")
        fi
        ;;
    esac
done


# Set specials colors
fill_special_colors --fill-missing-items 


# Replace defined font and check it
[[ ${_GTK_FONT_NAME} ]] && \
    GTK_FONT_NAME="${_GTK_FONT_NAME}"


# Preview with all modifiers
[[ ! ${CLEAN_THEME_PREVIEW} ]] && preview_theme


# Save scheme to path
if [[ ${SAVE_SCHEME} ]]; then
    normal "[ ] Save scheme to '${SAVE_SCHEME/$HOME/\~}'"
    apply "$TEMPLATES/default.scheme" "${SAVE_SCHEME}" && \
        success "[+] Scheme is saved" || \
        error   "[-] Scheme is not saved"
fi

# Save config to path
if [[ ${SAVE_CONFIG} ]]; then
    normal "[ ] Save configuration to '${SAVE_CONFIG/$HOME/\~}'"
    store_configuration "${SAVE_CONFIG}" && \
        success "[+] Configuration is saved" || \
        error   "[-] Configuration is not saved"
fi


# Set background image
if [[ ${SET_WALLPAPER} ]]; then
    [[ ! ${IMAGE} ]] && \
        error "Please specify the image first with --image" && exit 1

    $BASE/bin/setwal "$IMAGE" --fade-top ${SET_WALLPAPER:-80} \
        $([[ ! ${BRIGHT_VARIANT} ]] && echo "--light")
fi


# Install theme
if [[ ${INSTALL} ]]; then
    source "$BASE/inc/manage.installers.sh"
    source "$BASE/inc/manage.install"
    source "$BASE/inc/manage.logo"

    # Save last config
    normal "[ ] Save your configuration"
    CC_CONF=$(mktemp "$CACHE/config.XXXXXXXXX")
    store_configuration "$CC_CONF" && \
        success "[+] Your configuration is saved to '${CC_CONF/$HOME/\~}' file" || \
        error   "[-] Your configuration is not saved"


    DIFF=$((`date '+%s'` - $DIFF))
    success "\nCompleted with $(displaytime $DIFF)..."

    # Restart wm
    bspc wm -r
fi
