#!/usr/bin/env bash

# Initialise
BASE="$(realpath `dirname "$0"`)"

source "$BASE/../include/errors.lib.sh" || \
    source "$BASE/errors.lib.sh"

source "$BASE/../include/colors.lib.sh" || \
    source "$BASE/colors.lib.sh"


set_background() {
    [[ ! -e ${1} ]] && \
        fatal "Image file '${1/$HOME/\~}' not existing"

    local top=$(int ${2:-undefined}); top=${top:-0}
    local bottom=$(int ${3:-undefined}); bottom=${bottom:-0}

    FADE_COLOR=${FADE_COLOR:-#000000FF}
    local FADE_IN="$(  rgb_format 'rgba($r,$g,$b,$alpha)' "$FADE_COLOR" )"
    local FADE_OUT="$( rgb_format 'rgba($r,$g,$b,0)'      "$FADE_COLOR" )"

    [[ $top -lt 0 ]] && \
        fatal "Invalid fade value"

    local SIZE=( $(identify -ping -format '%w %h' "${IMAGE}") )
    local X=$(xrandr --query | grep "*+"); X=( $(echo "${X/x/ }") )

    WIDTH=$(int ${WIDTH:-undefined})
    [[ "$WIDTH" && "$WIDTH" -le 0 ]] && \
        fatal "Invalid width: $WIDTH"

    [[ ! "${WIDTH}" ]] && \
        WIDTH=${X[0]:-1920}

    HEIGHT=$(int ${HEIGHT:-undefined})
    [[ "$HEIGHT" && "$HEIGHT" -le 0 ]]  && \
        fatal "Invalid height: $HEIGHT"

    [[ ! "${HEIGHT}" ]] && \
        HEIGHT=${X[1]:-1080}

    # Chech width scale
    local W=$WIDTH
    local H=$(echo "${SIZE[1]} / $(echo "${SIZE[0]} / $WIDTH"  | bc -l) + 1" | bc -s)

    if [[ $H -lt $HEIGHT ]]; then
        H=$HEIGHT
        W=$(echo  "${SIZE[0]} / $(echo "${SIZE[1]} / $HEIGHT"  | bc -l) + 1" | bc -s)
    fi

    local L=$(echo "($W - $WIDTH)  / 2" | bc -s)
    local T=$(echo "($H - $HEIGHT) / 2" | bc -s)

    local TMP_IMAGE=$(mktemp "/tmp/tmp-image.XXXXXXXXX.jpg")

    convert "${1}" -resize ${W}x${H} -crop ${WIDTH}x${HEIGHT}+${L}+${T} \
        "$TMP_IMAGE"

    if [[ $top -gt 0 ]]; then
        convert "$TMP_IMAGE" \
            \( -size ${WIDTH}x${top} gradient:${FADE_IN}-${FADE_OUT} \) \
            -geometry +0+0 -compose over -composite \
            "$TMP_IMAGE"
    fi

    if [[ $bottom -gt 0 ]]; then
        convert "$TMP_IMAGE" \
            \( -size ${WIDTH}x${bottom} gradient:${FADE_OUT}-${FADE_IN} \) \
            -geometry +0+$(echo "$HEIGHT - $bottom" | bc -s) -compose over -composite \
            "$TMP_IMAGE"
    fi

    convert "$TMP_IMAGE" -resize ${WIDTH}x${HEIGHT}\
        "$HOME/.wallpaper.jpg"

    rm -rf "$TMP_IMAGE" > /dev/null 2>&1

    ${BACKGROUND_SETTER:-feh --bg-fill} "$HOME/.wallpaper.jpg" 2>/dev/null
}



# Parse command-line args
while [ -n "$1" ]; do
    case "${1}" in
    --fade-top|-t)
        VAL=$(int ${2:-"undefined"})
        [[ ! $VAL || $VAL -lt 0 ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        FADE_TOP=$VAL
        shift
        ;;

    --fade-bottom|-b)
        VAL=$(int ${2:-"undefined"})
        [[ ! $VAL || $VAL -lt 0 ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        FADE_BOTTOM=$VAL
        shift
        ;;

    --fade-color|-c)
        [[ ! $(rgb "${2}" --no-kill) ]] && \
            fatal "Invalid color '${2}' from ${1} argument"
        
        FADE_COLOR="${2}"
        shift
        ;;

    --width|-W)
        VAL=$(int ${2:-"undefined"})
        [[ ! $VAL || $VAL -le 0 ]] && \
            fatal "Invalid width: '${2}'"

        WIDTH=$VAL
        shift
        ;;

    --height|-H)
        VAL=$(int ${2:-"undefined"})
        [[ ! $VAL || $VAL -le 0 ]] && \
            fatal "Invalid height: '${2}'"

        HEIGHT=$VAL
        shift
        ;;

    *)
        IMAGE="${1/\~/$HOME}"
        ;;
    esac
    shift
done


[[ ! -e "${IMAGE/\~/$HOME}" ]] && \
    fatal "Image file '${IMAGE/\~/$HOME}' not existing"

set_background "${IMAGE}" "${FADE_TOP}" "${FADE_BOTTOM}"
