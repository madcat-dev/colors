#!/usr/bin/env bash

LC_ALL=C
BASE=$(realpath $(dirname $0))

source $BASE/lib/core.sh

# Initialise
DEBUG_LEVEL=0
NOTIFY_HEADER='$LABEL'

AVAILABLE=( $(ls $BASE/schemes) )

set_timer
restore_colors_from_xrdb
restore_environment_variables


while [ -n "$1" ]; do
    VAL=

    case "${1}" in
    --install)
        INSTALL=Yes
        ;;

    --hue)
        isvalue "${2}" \
            || fatal "Invalid parameter '${2}' from ${1} argument"

        for i in {0..7}; do
            COLOR[$i]=$(rgb_hue $(get $i) ${2})
        done
        shift
        ;;
    --saturation)
        isvalue "${2}" \
            || fatal "Invalid parameter '${2}' from ${1} argument"

        for i in {0..7}; do
            COLOR[$i]=$(rgb_saturation $(get $i) ${2})
        done
        shift
        ;;
    --value)
        isvalue "${2}" \
            || fatal "Invalid parameter '${2}' from ${1} argument"

        for i in {0..7}; do
            COLOR[$i]=$(rgb_value $(get $i) ${2})
        done
        shift
        ;;

    --light)
        GTK_APPLICATION_PREFER_DARK_THEME=0
        ;;
    --dark)
        GTK_APPLICATION_PREFER_DARK_THEME=1
        ;;
    --save)
        [[ ! ${2} || ${2:0:1} == "-" ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        SAVE_THEME=${2}
        shift
        ;;
    --list)
        echo -e "${AVAILABLE[@]}"
        exit 0
        ;;
    --short)
        SHORT_PREVIEW=Yes
        ;;

    --image)
        COLOR=()
        THEME="$(basename "${2/\~/$HOME}")"

        for color in $(gen_colors_from_image "${2/\~/$HOME}" $(neg ${GTK_APPLICATION_PREFER_DARK_THEME:-1})); do
            COLOR[${index:-0}]="$color"
            ((index++))
        done

        shift
        ;;
    *)
        COLOR=()
        THEME="${1/\~/$HOME}"

        debug "Load theme '$THEME'"

        [[ ! -f "${THEME}" ]] \
            && THEME="$BASE/themes/$THEME"

        source "$THEME" 2>/dev/null \
            || fatal "Color theme '$THEME' not found"
        ;;
    esac
    shift
done


isfalse ${CLEAN_THEME_PREVIEW} \
    && colors_reallocation $(neg ${GTK_APPLICATION_PREFER_DARK_THEME:-1})

isfalse "${SHORT_PREVIEW}" \
    && preview_theme_header

preview_theme

# Save scheme to path
if [[ ${SAVE_THEME} ]]; then
    normal "Save scheme to '${SAVE_THEME/$HOME/\~}'"
	save_theme "${SAVE_THEME}" \
        && success "Theme is saved" \
        || error   "Theme is not saved"
fi

if istrue "${INSTALL}"; then
    gen_sh_theme \
        && success "Sh theme is generated" \
        || fatal   "Sh theme is not generated"

    get_sh_theme \
        && success "Sh theme is restored" \
        || fatal   "Sh theme is not restored"
fi


displaytime $(get_timer)
