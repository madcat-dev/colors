#
# Arguments parser from colors manager
# require: errors.lib.sh
# require: colors.lib.sh
#

USAGE=$(cat <<- ENDDATA
Usage: ${0} [theme] [install] [ARGS...]
  ARGS:
    --color|-c index #color|value
                        - set custom theme color by index

    --hue|-H value      - change all colors position in the spectrum
    --saturation|-S value
                        - change all colors color saturation ("purity")
    --value|-V value    - change all colors brightness.
                          The value can be an absolute, relative, positive 
                          number, negative number, or expressed as a percentage
                          example: 10, +10, -23, +12%, -34%

    --relative-value|-R - change 8..15 colors intensity relatively base colors.
                          This function forcibly changes the color relative to 
                          the main one. The change value can be set in the 
                          BRIGHTNEST variable, default: 10.
                          Color '0' is excluded in modifier list

    --no-relative-value|-D
                        - disable relatively base colors

    --font|-f "font"    - set base font, example "Noto Sans 11"
                          (replace GTK_FONT_NAME from config file)
                    
    --config|-C "path"  - use external config from path
                          default use config.GTK_THEME_NAME if exists  

    --color-black-base|-B
                        - generate new color scheme from 'black' color

    --image|-I "path"   - generate new color scheme from image

    --light             - gtk application prefer light theme
    --dark              - gtk application prefer dark theme
    
    --save-scheme path  - save scheme to path
    --save-config path  - save config to path

    --cls|-             - theme preview without extended configs
    --short             - short preview color scheme
    --purge             - clear cache

    --help|-h           - print this usage
    --list|-l           - show a list of available schemes 

Order of applying modifiers:
    - load color scheme (if given) / from image / from color
    - apply hue
    - apply saturation
    - apply value
    - fill special colors value (background, foreground, cursor, ...)
    - load preselected config or default
    - apply custom colors values
    - apply brightnest of relative value (always)

Available schemes:
    \033[33m$(echo $(ls `dirname "$0"`/schemes))\033[0m
ENDDATA
)


_commands=()

while [ -n "$1" ]; do
    VAL=

    case "${1}" in
    --install)
        INSTALL=yes
        ;;

    --color|-c)
        _dest= _value= _mod= _srce=

        _dest="${2}"; shift
        [[ ! $(at "${_dest}" ${COLOR_KEYS[@]}) ]] && \
            fatal "Invalid parameter '${_dest}' from --color argument"

        while [ -n "$2" ]; do
            if [[ $(isrgb "${2}") ]]; then
                _srce="${2}"

            elif [[ $(at "${2}" ${COLOR_KEYS[@]}) ]]; then
                [[ ${_srce} ]] && \
                    _value="${2}" || _srce="${2}"

            elif [[ " H S V h s v " == *" ${2} "* ]]; then
                _mod="${2}"
                _value="${3}"; shift

                [[ ! $(isparsed_value "$_value") ]] && \
                    fatal "Invalid parameter '${_value}' from --color argument"

            elif [[ $(isparsed_value "${2}") ]]; then
                _value="${2}"

            else
                break
            fi

            shift
        done

        _commands+=( "${_dest} ${_value:-NONE} ${_mod:-V} ${_srce:-$_dest}" )
        ;;

    --hue|-H)
        [[ ! $(isparsed_value "${2}") ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        _commands+=( "--hue ${2}" )
        shift
        ;;

    --saturation|--sat|-S)
        [[ ! $(isparsed_value "${2}") ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        _commands+=( "--saturation ${2}" )
        shift
        ;;

    --value|--val|-V)
        [[ ! $(isparsed_value "${2}") ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        _commands+=( "--value ${2}" )
        shift
        ;;

    --relative|--rel|-R)
        _val=
        if [[ $(isparsed_value "${2}") ]]; then
            _val="${2}"; shift
        fi

        _commands+=( "--relative ${_val:-+10}" )
        ;;

    --fill)
        _commands+=( "--fill" )
        ;;

    --mode)
        [[ ! $(isint ${2}) ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        _commands+=( "--mode ${2}" )
        shift
        ;;

    --font|-f)
        [[ ! ${2} || ${2:0:1} == "-" ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        _GTK_FONT_NAME="${2}"
        shift
        ;;

    --config|-C)
        CONFIG="${2}"
        shift
        ;;

    --image|-I)
        IMAGE="${2}"
        shift
        ;;

    --light)
        GTK_APPLICATION_PREFER_DARK_THEME=0
        ;;
    --dark)
        GTK_APPLICATION_PREFER_DARK_THEME=1
        ;;

    --save)
        [[ ! ${2} || ${2:0:1} == "-" ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        SAVE_SCHEME=${2}
        shift
        ;;

    --save-config)
        [[ ! ${2} || ${2:0:1} == "-" ]] && \
            fatal "Invalid parameter '${2}' from ${1} argument"

        SAVE_CONFIG=${2}
        shift
        ;;

    --cls|-)
        CLEAN_THEME_PREVIEW=true
        ;;
    --short)
        export SHORT_PREVIEW=true
        ;;
    --purge)
        rm -rf "$CACHE"/config.*
        rm -rf "$CACHE"/theme.*
        exit 0
        ;;
    --help|-h)
        echo -e "$USAGE"
        exit 0
        ;;
    --list|-l)
        echo -e "${AVAILABLE[@]}"
        exit 0
        ;;
    *)
        [[ ${1:0:1} == "-" ]] && \
            fatal "Invalid parametr '$1'!!!"

        NAME="${1}"
        ;;
    esac
    shift
done
